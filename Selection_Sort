//Selection Sort sorts the smallest element first by getting the smallest element to the start in each of the pass
*BEST CASE: O(n^2)
swapping complexity: O(1)
comparison complexity: O(n^2)

*WORST CASE: O(n^2)
swapping complexity: O(n)
comparison complexity: O(n^2)

*AVERAGE CASE: O(n^2)
swapping complexity: O(n)
comparison complexity: O(n^2)

Space complexity : O(1)



//CODE

void selectionSort(int arr[], int n)
    {
       //code here
        for(int i=0; i<n; i++){
        //calling the function which finds the minimun element
            int j = select(arr,i,n);
         //Sorting
             int temp = arr[i];
             arr[i] = arr[j];
             arr[j] = temp;
        }
    }
    
    
    
     int select(int arr[], int i,int n)
    {
        // code here such that selectionSort() sorts arr[]
        //Finding the minium element
        int min = arr[i];
        int index = 0;
        for(int j=i; j<n; j++){
            if(min >= arr[j]){
                index = j;
                min = arr[j];
            }
        }
        return index;
    }
